// checksum 0x82ed version 0x60010
/*
  This file was generated by the Qt Quick Application wizard of Qt Creator.
  QmlApplicationViewer is a convenience class containing mobile device specific
  code such as screen orientation handling. Also QML paths and debugging are
  handled here.
  It is recommended not to modify this file, since newer versions of Qt Creator
  may offer an updated version of it.
*/

#ifndef QMLAPPLICATIONVIEWER_H
#define QMLAPPLICATIONVIEWER_H

#include <QtDeclarative/QDeclarativeView>
#include <QVariantList>


#include <AccountSetup/ProviderPluginProcess>
#include <accounts-qt/Accounts/Account>
#include <accounts-qt/Accounts/Manager>
#include "occonfigif.h"

using namespace Accounts;

class QmlApplicationViewer : public QDeclarativeView
{
    Q_OBJECT

public:
    enum ScreenOrientation {
        ScreenOrientationLockPortrait,
        ScreenOrientationLockLandscape,
        ScreenOrientationAuto
    };

    explicit QmlApplicationViewer(QWidget *parent = 0);
    virtual ~QmlApplicationViewer();

    static QmlApplicationViewer *create();

    void setMainQmlFile(const QString &file);
    void addImportPath(const QString &path);

    // Note that this will only have an effect on Symbian and Fremantle.
    void setOrientation(ScreenOrientation orientation);

    void showExpanded();
    void init(int type);
    void onLoad();

    QVariantList paramsSet;

    int initType;
    int accountId;
    WId parentWindowId;
    Accounts::Account *accountx;
    Accounts::Manager *manager;

    bool dataUpdated;

    Q_INVOKABLE void createAccount(QVariant uname,
                                   QVariant pword,
                                   QVariant server,
                                   QVariant usessl,
                                   QVariant ignoresslerrors);
    Q_INVOKABLE void saveAccount(QVariant uname,
                                 QVariant pword,
                                 QVariant server,
                                 QVariant usessl,
                                 QVariant ignoresslerrors,
                                 QVariant aenabled);
    Q_INVOKABLE void deleteAccount();

private:
    explicit QmlApplicationViewer(QDeclarativeView *view, QWidget *parent);
    class QmlApplicationViewerPrivate *d;

private slots:
    // On Account remove operations
    void onAccountRemoved();
    // On Create new Account operations
    void onAccountCreated(Accounts::AccountId id);
    // On Account save operations
    void onAccountSaved();
};

QApplication *createApplication(int &argc, char **argv);

#endif // QMLAPPLICATIONVIEWER_H

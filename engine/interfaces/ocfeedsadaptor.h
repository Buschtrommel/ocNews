/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c OcFeedsAdaptor -a ocfeedsadaptor.h:ocfeedsadaptor.cpp de.buschmann23.ocNewsEngine.Feeds.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef OCFEEDSADAPTOR_H
#define OCFEEDSADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface de.buschmann23.ocNewsEngine.Feeds
 */
class OcFeedsAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "de.buschmann23.ocNewsEngine.Feeds")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"de.buschmann23.ocNewsEngine.Feeds\">\n"
"    <method name=\"requestFeeds\"/>\n"
"    <method name=\"createFeed\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"url\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"folderId\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"eventView\"/>\n"
"    </method>\n"
"    <method name=\"deleteFeed\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"moveFeed\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"folderId\"/>\n"
"    </method>\n"
"    <method name=\"markFeedRead\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"feedId\"/>\n"
"    </method>\n"
"    <method name=\"getFeeds\">\n"
"      <annotation value=\"QVariantMap\" name=\"com.trolltech.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{sv}\" name=\"feeds\"/>\n"
"    </method>\n"
"    <method name=\"renameFeed\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"newName\"/>\n"
"    </method>\n"
"    <signal name=\"requestedFeedsError\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"requestedFeedsErrorString\"/>\n"
"    </signal>\n"
"    <signal name=\"requestedFeedsSuccess\">\n"
"      <arg name=\"updated\" type=\"ai\" direction=\"out\"/>\n"
"      <arg name=\"newFeeds\" type=\"ai\" direction=\"out\"/>\n"
"      <arg name=\"deleted\" type=\"ai\" direction=\"out\"/>\n"
"    </signal>\n"
"    <signal name=\"createdFeedError\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"createFeedResultError\"/>\n"
"    </signal>\n"
"    <signal name=\"createdFeedSuccess\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"feedname\"/>\n"
"    </signal>\n"
"    <signal name=\"deletedFeedError\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"deleteFeedResultError\"/>\n"
"    </signal>\n"
"    <signal name=\"deletedFeedSuccess\">\n"
"      <arg name=\"id\" type=\"i\" direction=\"out\"/>\n"
"    </signal>\n"
"    <signal name=\"movedFeedError\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"moveFeedResultError\"/>\n"
"    </signal>\n"
"    <signal name=\"movedFeedSuccess\"/>\n"
"    <signal name=\"markedReadFeedError\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"markedReadFeedErrorResult\"/>\n"
"    </signal>\n"
"    <signal name=\"renamedFeedSuccess\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"newName\"/>\n"
"    </signal>\n"
"    <signal name=\"renamedFeedError\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"renamedFeedErrorString\"/>\n"
"    </signal>\n"
"    <signal name=\"markedReadFeedSuccess\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"feedId\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    OcFeedsAdaptor(QObject *parent);
    virtual ~OcFeedsAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void createFeed(const QString &url, const QString &folderId, bool eventView);
    void deleteFeed(const QString &id);
    QVariantMap getFeeds();
    void markFeedRead(const QString &feedId);
    void moveFeed(const QString &id, const QString &folderId);
    void renameFeed(const QString &id, const QString &newName);
    void requestFeeds();
Q_SIGNALS: // SIGNALS
    void createdFeedError(const QString &createFeedResultError);
    void createdFeedSuccess(const QString &feedname);
    void deletedFeedError(const QString &deleteFeedResultError);
    void deletedFeedSuccess(const int &id);
    void markedReadFeedError(const QString &markedReadFeedErrorResult);
    void markedReadFeedSuccess(const QString &feedId);
    void movedFeedError(const QString &moveFeedResultError);
    void movedFeedSuccess();
    void requestedFeedsError(const QString &requestedFeedsErrorString);
    void requestedFeedsSuccess(const QList<int> &updated, const QList<int> &newFeeds, const QList<int> &deleted);
    void renamedFeedSuccess(const QString &newName);
    void renamedFeedError(const QString &renamedFeedErrorString);
};

#endif
